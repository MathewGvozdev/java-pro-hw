1. Как отказаться от изменений в файле (файлах) находящийся в рабочем каталоге (work directory)?
    Нужно использовать команду "git checkout" или "git restore"

2. Как вернуть файл из индекса в рабочий каталог?
    Для того чтобы вернуть файл из индекса (staging area) обратно в рабочий каталог, можно использовать команду
    "git restore" или "git reset"
    a)  > git restore --staged fileName
    b)  > git reset HEAD fileName
        > git restore fileName

3. Как отменить ошибочный commit?
    Чтобы отменить коммит (т.е. не только его изменения), можно воспользоваться командой git reset с опцией --hard.
    Это удалит последний коммит и изменения из рабочего каталога.
        > git reset --hard HEAD~1
    Чтобы оставить изменения из нежелательного коммита в рабочем каталоге (или в индексе), можно вместо --hard
    использовать --soft:
        > git reset --soft HEAD~1
    HEAD~1 указывает на коммит перед текущим HEAD (т.е. последний коммит).

4. Как исправить commit отправленный на сервер GitHub?
    a) Внести необходимые изменения в файлы, чтобы исправить ошибки в последнем коммите.
    b) Добавить изменения в индекс с помощью команды git add.
    с) Создать новый коммит с исправленными изменениями, используя команду git commit --amend:
        > git commit --amend

    d) Отправить изменения на сервер:
        > git push -f origin branchName
    Использование -f (или --force) является опцией принудительной передачи изменений на сервер.
    Это обновит историю коммитов на удаленном сервере, так что нужно понимать последствия.

5. Как создать новую ветку и переключится в нее?
    Создание ветки:
        > git branch newBranchName
    Переключение на новую ветку:
        > git checkout newBranchName

6. Как создать git репозиторий из локального каталога на своем компьютере. Как его отправить на github.com?
    a) Создание локального репозитория:
        > git init
        Это создаст новый локальный Git репозиторий в текущем каталоге.
    b) Добавление файлов и коммит:
        > git add .
        Эта команда добавит все файлы из текущего каталога в индекс.
    c) Создание коммита с добавленными файлами:
        > git commit -m "first commit"
    d) Связывание локального репозитория с удаленным:
    GitHub предоставляет URL удаленного репозитория
        > git remote add origin repositoryURL
    e) Отправка на GitHub:
    Отправьте ваш локальный репозиторий на GitHub с помощью команды git push:
        > git push -u origin main

7. Как получить на локальный компьютер изменения с github.com
    > git pull origin main

8. Какую информацию нам дают команда :
    git status:
        Эта команда показывает текущее состояние рабочего каталога и индекса (staging area). Она сообщает о:
        - файлах, которые были изменены, но не добавлены в индекс
        - файлах, которые были добавлены в индекс и готовы для коммита
        - файлах, которые были удалены, но не были ещё удалены из индекса
    git log:
        Эта команда отображает историю коммитов в репозитории. Она показывает:
        - список коммитов в обратном хронологическом порядке
        - хэшкоды коммитов
        - авторов и даты коммитов
        - сообщения коммитов
    git remote -v:
        Эта команда отображает список удаленных репозиториев, связанных с локальным репозиторием. Она показывает:
        - URL удаленных репозиториев.
        - имена удаленных репозиториев (обычно origin для репозитория на GitHub).
    git branch -v:
        Эта команда отображает список веток в репозитории, включая информацию о последнем коммите в каждой ветке. Она показывает:
        - список веток.
        - имя текущей активной ветки (обычно выделено звездочкой).
        - хэши последних коммитов в каждой ветке.